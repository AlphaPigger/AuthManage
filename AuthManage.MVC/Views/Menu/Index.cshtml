
@{
    ViewData["Title"] = "功能列表";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model X.PagedList.IPagedList<AuthManage.Application.DTOModel.MenuDto>
@using X.PagedList.Mvc.Core

<div class="main sidebar-minified">
    <div class="panel panel-default">
        <div class="panel-heading">
            <strong class="strong">功能列表</strong>
            <div class="panel-actions">
                @*<a href="~/Menu/AddParent" class="btn-default">新增顶级</a>
        <a href="~/Menu/Add" class="btn-default"><i class="glyphicon glyphicon-plus"></i></a>*@
                @await Component.InvokeAsync("MenuAddParent")
                @await Component.InvokeAsync("MenuAdd")
            </div>
            <div class="panel-actions">
                <form action="~/Menu/Index" class="form-inline">
                    <span class="form-control" style="border:0px;margin-bottom:1px">每页指定记录数：</span>
                    @Html.TextBox("PageSize", ViewBag.PageSize as string, new { @class = "form-control", @style = "margin-top:-1px;width:150px;margin-right:20px", maxlength = 1, placeholder = "请输入分页记录数" })
                    <button type="submit" class="btn btn-default" style="padding-left:0px;padding-right:0px;margin-right:30px"><i class="glyphicon glyphicon-search"></i></button>
                </form>
            </div>
        </div>
        <div class="panel-body">
            <div style="overflow:scroll;">
                <table class="table table-bordered table-striped table-condensed table-hover">
                    <thead>
                        <tr>
                            <th class="text-center">
                                @Html.DisplayNameFor(m => Model.AsEnumerable().Single().Name)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(m => Model.AsEnumerable().Single().Address)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(m => Model.AsEnumerable().Single().MenuType)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(m => Model.AsEnumerable().Single().CreateTime)
                            </th>
                            <th class="text-center">
                                @Html.DisplayNameFor(m => Model.AsEnumerable().Single().CreateUser)
                            </th>
                            <th class="text-center">
                                操作
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="text-center">
                                    @Html.DisplayFor(m => item.Name)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(m => item.Address)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(m => item.MenuType)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(m => item.CreateTime)
                                </td>
                                <td class="text-center">
                                    @Html.DisplayFor(m => item.CreateUser)
                                </td>
                                <td class="text-center">
                                    @*<a href="~/Menu/Edit/@item.ID" class="btn btn-info"><i class="glyphicon glyphicon-edit"></i></a>
        <a href="~/Menu/Delete/@item.ID" class="btn btn-danger" onclick="return Delete()"><i class="glyphicon glyphicon-trash"></i></a>*@
                                    @await Component.InvokeAsync("MenuEdit", item.ID)
                                    @await Component.InvokeAsync("MenuDelete",item.ID)
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="14" style="margin-top:1px">
                                每页 @Model.PageSize 条记录，共 @Model.TotalItemCount 条记录&nbsp;&nbsp;&nbsp;&nbsp;第 @Model.PageNumber 页，共 @Model.PageCount 页
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, PageSize = ViewBag.PageSize }), new PagedListRenderOptions { LinkToFirstPageFormat = "首页", LinkToPreviousPageFormat = "上一页", LinkToNextPageFormat = "下一页", LinkToLastPageFormat = "末页", MaximumPageNumbersToDisplay = 5, DisplayItemSliceAndTotal = false })
        </div>
    </div>
</div>

<script type="text/javascript">
    function Delete()
    {
        var bool = confirm("确认删除吗？");
        return bool;
    }
</script>

